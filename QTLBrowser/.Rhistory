results
is.null(results)
nrow(results)
rsid = 'rs225436'
query <- sprintf("
select *
from dim_snp S
inner join dim_coordinate C on C.coord = S.coord
where rsid = '%s';
", rsid)
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query))
database(conn)
nrow(results)
results
ucsc_results <- glida::queryUCSC(glida::updatePositions('rs225436'))
ucsc_results
parse_snp <- function (rsid) {
query <- sprintf("
select *
from dim_snp S
inner join dim_coordinate C on C.coord = S.coord
where rsid = '%s';
", rsid)
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query))
database(conn)
# if RSID not found, extract from UCSC
if (nrow(results) == 0) {
results <- glida::queryUCSC(glida::updatePositions(rsid))
snp_info <- results[, .(rsid = SNP, chromosome = CHR, position = POS)]
} else {
snp_info <- results[, .(rsid, chromosome, position = start_pos)]
}
return (snp_info)
}
snp_info <- parse_snp('rs4463766')
parse_snp <- function (rsid) {
query <- sprintf("
select *
from dim_snp S
inner join dim_coordinate C on C.coord = S.coord
where rsid = '%s';
", rsid)
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query))
database(conn)
# if RSID not found, extract from UCSC
if (nrow(results) == 0) {
results <- data.table(glida::queryUCSC(glida::updatePositions(rsid)))
snp_info <- results[, .(rsid = SNP, chromosome = CHR, position = POS)]
} else {
snp_info <- results[, .(rsid, chromosome, position = start_pos)]
}
return (snp_info)
}
snp_info <- parse_snp('rs4463766')
snp_info
parse_snp <- function (rsid) {
query <- sprintf("
select *
from dim_snp S
inner join dim_coordinate C on C.coord = S.coord
where rsid = '%s';
", rsid)
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query))
database(conn)
# if RSID not found in GenomeDB, extract from UCSC
if (nrow(results) == 0) {
results <- data.table(glida::queryUCSC(glida::updatePositions(rsid)))
results[, chromosome := gsub("CHR", "", CHR)]
snp_info <- results[, .(rsid = SNP, chromosome, position = POS)]
} else {
snp_info <- results[, .(rsid, chromosome, position = start_pos)]
}
return (snp_info)
}
snp_info <- parse_snp('rs1163472')
snp_info
rsid
results <- data.table(glida::queryUCSC(glida::updatePositions(rsid)))
results[, chromosome := gsub("CHR", "", CHR)]
snp_info <- results[, .(rsid = SNP, chromosome, position = POS)]
snp_info
results <- data.table(glida::queryUCSC(glida::updatePositions(rsid)))
results[, chromosome := gsub("chr", "", CHR)]
snp_info <- results[, .(rsid = SNP, chromosome, position = POS)]
snp_info
browse_qtls <- function (target, dimTissue, type = "gene") {
query <- function () {
lcl_query <- if (type == "gene") {
sprintf("
select
G.gene_symbol,
C.chromosome,
C.center_pos as position,
F.tissue,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_coordinate C on C.coord = F.coord
where G.gene_symbol = '%s';", target)
} else {
# ------------------------------------------
#
#  TO DO:  review this, be sure of what it is achieving
#
# ------------------------------------------
snp_info <- parse_snp(target)
sprintf("select
C.chromosome,
C.center_pos as position,
F.tissue,
F.pvalue
FROM fact_qtl F
inner join dim_coordinate C on C.coord = F.coord
WHERE C.chromosome = %s
AND C.center_pos = %s",
snp_info[, chromosome],
snp_info[, position])
}
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
database(conn)
setkey(results, "tissue")
results <- results[dimTissue]
results <- results[!is.na(gene_symbol)]
results[, tissue_score := min(pvalue), tissue]
tissue_rank <- results[, .(rank_score = min(tissue_score)), tissue][order(rank_score)]
tissue_rank[, rank := 1:.N]
setkey(tissue_rank, tissue)
results <- results[tissue_rank]
results[rank > 4, smts := "Other"]
return (results[, .(gene_symbol, chromosome, position, pvalue, smts, smtsd)])
}
head(browse_qtls("FTO", dimTissue))
head(browse_qtls(rsid, dimTissue, type = 'snp'))
query <- function () {
base_ <- "select
G.gene_symbol,
C.chromosome,
C.center_pos as position,
F.tissue,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_coordinate C on C.coord = F.coord
%s"
if (type == "gene") {
filter_ <- sprintf("where G.gene_symbol = '%s';", target)
} else {
# ------------------------------------------
#
#  TO DO:  review this, be sure of what it is achieving
#
# ------------------------------------------
snp_info <- parse_snp(target)
filter_ <-  sprintf("WHERE C.chromosome = %s AND C.center_pos = %s",
snp_info[, chromosome], snp_info[, position])
}
return (sprintf(base_, filter_))
}
type <- "gene"
target <- "ABCG2"
query()
target <- rsid
type <- "snp"
query()
browse_qtls <- function (target, dimTissue, type = "gene") {
query <- function () {
base_ <- "select
G.gene_symbol,
C.chromosome,
C.center_pos as position,
F.tissue,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_coordinate C on C.coord = F.coord
%s"
if (type == "gene") {
filter_ <- sprintf("where G.gene_symbol = '%s';", target)
} else {
# ------------------------------------------
#
#  TO DO:  review this, be sure of what it is achieving
#
# ------------------------------------------
snp_info <- parse_snp(target)
filter_ <-  sprintf("WHERE C.chromosome = %s AND C.center_pos = %s",
snp_info[, chromosome], snp_info[, position])
}
return (sprintf(base_, filter_))
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
database(conn)
setkey(results, "tissue")
results <- results[dimTissue]
results <- results[!is.na(gene_symbol)]
results[, tissue_score := min(pvalue), tissue]
tissue_rank <- results[, .(rank_score = min(tissue_score)), tissue][order(rank_score)]
tissue_rank[, rank := 1:.N]
setkey(tissue_rank, tissue)
results <- results[tissue_rank]
results[rank > 4, smts := "Other"]
return (results[, .(gene_symbol, chromosome, position, pvalue, smts, smtsd)])
}
head(browse_qtls("FTO", dimTissue))
head(browse_qtls(rsid, dimTissue, type = 'snp'))
snp_info
type
query()
conn <- database()
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene_id
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(dbGetQuery(conn, query()))
dimTissue <- data.table(dbGetQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue_id)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene_id
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue_id)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue_id)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue)
setkey(dimTissue, tissue)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
rm(browse_expression())
rm(browse_expression)
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
head(dimTissue)
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue as tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue_id)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
target = 'FTO'
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.chromosome,
g.gene_biotype,
f.rpkm,
f.tissue as tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
head(results)
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.gene_biotype,
f.rpkm,
f.tissue as tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue_id)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
target
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
head(results)
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.gene_biotype,
f.rpkm,
f.tissue as tissue_id
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
head(results)
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dimTissue;"))
database(conn)
setkey(results, tissue)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
head(dimTissue)
browse_expression <- function (target) {
query <- function () {
lcl_query <- sprintf("
SELECT
g.gene_symbol,
g.gene_biotype,
f.rpkm,
f.tissue
FROM fact_expression as f
INNER JOIN dim_gene as g ON g.gene_id = f.gene
WHERE g.gene_symbol = '%s';
", target)
return (lcl_query)
}
conn <- database()
results <- data.table(RODBC::sqlQuery(conn, query()))
dimTissue <- data.table(RODBC::sqlQuery(conn, "select * from dim_tissue;"))
database(conn)
setkey(results, tissue)
setkey(dimTissue, tissue_id)
results <- results[dimTissue]
return (results[!is.na(gene_symbol)])
}
head(browse_expression("FTO"))
