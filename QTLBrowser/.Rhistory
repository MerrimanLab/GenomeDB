gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue), text = rsid)) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
ggplotly(display_gwas(gwas), tooltip = c("x", "y", "rsid"))
head(gwas)
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue), text = gwas$rsid)) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
ggplotly(display_gwas(gwas), tooltip = c("x", "y", "rsid"))
ggplotly(display_gwas(gwas)) %>% layout(annotations = list(x = gwas$center_pos / 1000000,
y = -log10(gwas$pvalue),
text = gwas$rsid))
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
ggplotly(display_gwas(gwas)) %>% layout(annotations = list(x = gwas$center_pos / 1000000,
y = -log10(gwas$pvalue),
text = gwas$rsid))
ggplotly(display_gwas(gwas)) %>% layout(annotations = list(gwas$center_pos / 1000000,
-log10(gwas$pvalue),
gwas$rsid))
plot_ly(viz, text = gwas$rsid)
plot_ly(display_gwas(gwas), text = gwas$rsid)
plot_ly(display_gwas(gwas), text = gwas$rsid, mode = 'markers')
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers')
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
display_gwas(gwas, tooltip = c("x", "y"))
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers', tooltip = c("x", "y"))
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers', colour = "darkviolet")
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers', color = "darkviolet")
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers')
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers', alpha = 0.3)
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
display_gwas(gwas)
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes
?jitter
display_gwas <- function (gwas) {
#gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- plot_ly(gwas, x = position, y = -log10(pvalue),
text = rsid, mode = 'markers')
return (viz)
}
gwas <- extract_gwas('TCF7L2', 'diabetes', db)
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart, genes$GeneEnd) y = jitter(-1))
p
p <- add_trace(p, x = c(genes$GeneStart, genes$GeneEnd), y = jitter(-1))
p
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000), y = jitter(-1))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000), y = jitter(-1))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(-1), jitter(-1)))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(rep(-1, nrow(genes))), jitter(rep(-1, nrow(genes)))))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(rep(-1, nrow(genes))), jitter(rep(-1, nrow(genes)))),
mode ="lines")
p
head(genes)
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(rep(-1, nrow(genes))), jitter(rep(-1, nrow(genes)))),
group = geneName,
mode ="lines")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(rep(-1, nrow(genes))), jitter(rep(-1, nrow(genes)))),
group = GeneName,
mode ="lines")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = c(genes$GeneStart / 1000000, genes$GeneEnd / 1000000),
y = c(jitter(rep(-1, nrow(genes))), jitter(rep(-1, nrow(genes)))),
group = genes$GeneName,
mode ="lines")
p
library(reshape2)
xs <- melt(genes[, c(2, 3, 4, 6)], id.vars = "GeneName")
head(xs)
genes <- melt(genes[, c(2, 3, 4, 6)], id.vars = "GeneName")
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = rep(-1, nrow(genes)),
group = genes$GeneName,
mode ="lines")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value / 1000000,
y = rep(-1, nrow(genes)),
group = genes$GeneName,
mode ="lines")
p
genes$value <- genes$value / 1000000
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = rep(-1, nrow(genes)),
group = genes$GeneName,
mode ="lines")
p
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes <- melt(genes[, c(2, 3, 4, 6)], id.vars = "GeneName")
head(genes)
str(genes)
genes$value <- as.integer(genes$value) / 1000000
head(genes)
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = rep(-1, nrow(genes)),
group = genes$GeneName,
mode ="lines")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = jitter(rep(-1, nrow(genes))),
group = genes$GeneName,
mode ="lines")
p
?jitter
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = jitter(rep(-1, nrow(genes)), amount = 5),
group = genes$GeneName,
mode ="lines")
p
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 5)
head(genes)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = "GeneName")
genes$value <- as.integer(genes$value) / 1000000
head(genes)
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 5)
genes <- melt(genes[, c(2, 3, 4, 6)], id.vars = c("GeneName", "YValues"))
head(genes)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues"))
head(genes)
genes$value <- as.integer(genes$value) / 1000000
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = YValues,
group = genes$GeneName,
mode ="lines")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines")
p
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues"))
genes$value <- as.integer(genes$value) / 1000000
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colour = 1)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
color = 1)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colour = 1)
p
?add_trace
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colors = "darkgrey")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colors = "#RRGGBB")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
color = "#RRGGBB")
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colour = "#RRGGBB")
p
head(genes)
genes$Group <- -1  ## this will be used for colouring
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
colour = genes$Group)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
color = genes$Group)
p
genes$Group <- "A"  ## this will be used for colouring
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines",
color = genes$Group)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines", color = NA)
p
head(genes)
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
head(genes)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues", "GeneType"))
genes$value <- as.integer(genes$value) / 1000000
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues", "geneType"))
genes$value <- as.integer(genes$value) / 1000000
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
mode ="lines", color = genes$geneType)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
type = "marker",
mode ="lines", color = genes$geneType)
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes$GeneName,
type = "marker",
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
head(genes)
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
x <- ggplot(genes) + geom(segment(aes(x = GeneStart/1000000, xend = GeneEnd/1000000, y=Yvalues, yend = YValues, group = geneType)))
x <- ggplot(genes) + geom_segment(segment(aes(x = GeneStart/1000000, xend = GeneEnd/1000000, y=Yvalues, yend = YValues, group = geneType)))
x <- ggplot(genes) + geom_segment(aes(x = GeneStart/1000000, xend = GeneEnd/1000000, y=Yvalues, yend = YValues, group = geneType)))
x <- ggplot(genes) + geom_segment(aes(x = GeneStart/1000000, xend = GeneEnd/1000000, y=Yvalues, yend = YValues, group = geneType))
p <- display_gwas(gwas)
add_trace(p, ggplotly(x))
x <- ggplot(genes) + geom_segment(aes(x = GeneStart/1000000, xend = GeneEnd/1000000, y=YValues, yend = YValues, group = geneType))
add_trace(p, ggplotly(x))
p %>% layout(ggplotly(x))
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = c(genes$GeneName, genes$geneType),
type = "marker",
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues", "geneType"))
genes$value <- as.integer(genes$value) / 1000000
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = c(genes$GeneName, genes$geneType),
type = "marker",
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = c(genes$GeneName, genes$geneType),
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = c(genes[, c("GeneName", "geneType")]),
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes[, c("GeneName", "geneType")],
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
p <- display_gwas(gwas)
p <- add_trace(p, x = genes$value,
y = genes$YValues,
group = genes[, c("geneType")],
mode ="lines", color = c(genes$GeneName, genes$geneType))
p
p <- display_gwas(gwas)
for (gene in unique(genes$GeneName)) {
tmp <- genes[genes$GeneName == gene, ]
p <- add_trace(p,
x = tmp$value,
y = tmp$YValues,
mode = "lines",
color = tmp$geneType)
}
p
warnings()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(10, 113500000, 115500000))
genes$YValues <- jitter(rep(-5, nrow(genes)), 50)
genes <- melt(genes[, c(2, 3, 4, 6, 9)], id.vars = c("GeneName", "YValues", "geneType"))
genes$value <- as.integer(genes$value) / 1000000
p <- display_gwas(gwas)
for (gene in unique(genes$GeneName)) {
tmp <- genes[genes$GeneName == gene, ]
p <- add_trace(p,
x = tmp$value,
y = tmp$YValues,
mode = "lines")
}
p
p <- display_gwas(gwas)
for (gene in unique(genes$GeneName)) {
tmp <- genes[genes$GeneName == gene, ]
p <<- add_trace(p,
x = tmp$value,
y = tmp$YValues,
mode = "lines")
}
p
head(genes)
p <- display_gwas(gwas)
for (gene in unique(genes$GeneName)) {
tmp <- genes[genes$GeneName == gene, ]
p <- add_trace(p,
x = tmp$value,
y = tmp$YValues,
mode = "lines")
}
p
# install.packages("plotly")
library(plotly)
ggplotly(qtls)
ggplotly(gwas)
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(114, 115.5))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(114, 115.5))
grid.arrange(gwas, qtls, ncol = 1)
