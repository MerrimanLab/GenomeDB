from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ('ACSL5', 'TCF7L2', 'VTI1A)
order by pvalue asc"
db$connect_()
qtls <- db$query_(q)
db$disconnect_()
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ gene_symbol, nrow=2) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
q <- " select gene_symbol, snp_position, A1, A2, pvalue, smts, dataset
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ('ACSL5', 'TCF7L2', 'VTI1A')
order by pvalue asc"
db$connect_()
qtls <- db$query_(q)
db$disconnect_()
class(qtls)
qtls <- qtls[qtls$smts == 'Blood',]
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ gene_symbol, nrow=2) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
viz
qtls$position <- qtls$snp_position / 1000000
viz
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ gene_symbol, nrow=2) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
viz
library(RODBC)
library(glida)
library(ggplot2)
library(data.table)
library(gridExtra)
source("genomedb_data_logic.R")      # data access / manipulation logic
library(RODBC)
library(glida)
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("C:/Users/NickBurns/gitRepositories/myGits/GenomeDB/QTLBrowser/")
source("genomedb_data_logic.R")      # data access / manipulation logic
extract_qtl
extract_gwas
display_gwas
source("browser_logic.R")
display_gwas
display_qtl
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
}
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
ggtitle(sprintf("QTLs: %s", gene)) +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 113200000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
ggtitle(sprintf("QTLs: %s", gene)) +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 113200000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db)
gwas <- display_gwas('TCF7L2', 'diabetes', db)
qtls
gwas
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
ggtitle(sprintf("QTLs: %s", gene)) +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114200000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
qtls
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db)
gwas <- display_gwas('TCF7L2', 'diabetes', db)
gwas
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
gwas <- display_gwas('TCF7L2', 'diabetes', db)
gwas
qtls
x<-ggplot_build(qtls)
names(x)
x$panel$ranges
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
ggtitle(sprintf("QTLs: %s", gene)) +
theme_minimal()
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
ggtitle(sprintf("QTLs: %s", gene)) +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol, ncol = 1) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol, scales = 'free_y') +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(113, 116))
grid.arrange(gwas, qtls, ncol = 1)
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(114, 116))
grid.arrange(gwas, qtls, ncol = 1)
extract_qtl <- function (gene, tissues, db) {
query <- sprintf("select
G.gene_symbol,
T.smts,
F.snp_position,
F.pvalue
from fact_qtl F
inner join dim_gene G on G.gene_id = F.gene
inner join dim_tissue T on T.tissue_id = F.tissue
where G.gene_symbol in ( '%s' )
and T.smts in ('%s');", gene, tissues)
db$connect_()
results <- db$query_(query)
db$disconnect_()
return (results)
}
display_qtl <- function (gene, tissues, db) {
qtls <- extract_qtl(gene, tissues, db)
## This is a fudge to only get the top ranked tissue for each of the three genes
qtls <- qtls[((qtls$gene_symbol != 'VTI1A' & qtls$smts != 'Pituitary') |
(qtls$gene_symbol == 'VTI1A' & qtls$smts == 'Pituitary')), ]
qtls$position <- qtls$snp_position / 1000000
viz <- ggplot(qtls, aes(x = position, y = -log10(pvalue))) +
geom_point(aes(alpha = sqrt(1 / (pvalue + 1e-50))),
colour = "darkblue") +
facet_wrap(~ smts + gene_symbol) +
ylab("-log10( pvalue )") + xlab(sprintf("CHR%s position (MB)", unique(qtls$chromosome))) +
guides(size = "none", alpha = "none", shape = "none") +
theme_minimal()
return (viz)
}
display_gwas <- function (feature, trait, db) {
gwas <- extract_gwas(feature, trait, db)
gwas$position <- gwas$center_pos / 1000000
viz <- ggplot(gwas, aes(x = position, y = -log10(pvalue))) +
geom_point(colour = "darkviolet", alpha = 0.3) +
facet_wrap(~ dataset) +
ylab("-log10( pvalue )") + xlab("") +
theme_minimal()
genes <- glida::queryUCSC(glida::fromUCSCEnsemblGenes(chromosome = unique(gwas$chromosome),
start = 114100000,
end = 115500000))
viz <- gene_layer(viz, genes)
return (viz)
}
genes <- "TCF7L2', 'ACSL5', 'VTI1A"
tissues <- "Blood', 'Pituitary"
db <- database()
qtls <- display_qtl(genes, tissues, db) + scale_x_continuous(limits = c(113, 116))
gwas <- display_gwas('TCF7L2', 'diabetes', db) + scale_x_continuous(limits = c(114, 115.5))
grid.arrange(gwas, qtls, ncol = 1)
